new Vue({el:"#optinomic_app",vuetify:new Vuetify,store:new Vuex.Store({state:{count:0,apps:{},table_of_contents:[],current_app:null,sr:null,user:null,patient:null,clinic:null},mutations:{increment(state){state.count++},saveData(state,d){state[d.root]=d.data,console.warn("state :: ",new Date,state)}},actions:{getSurveyResponses({commit:commit}){var module_identifier=helpers.getAppID(),current_pid=parseInt(helpers.getPatientID()),current_stay_id=parseInt(helpers.getStayID()),base_data={date:new Date,data:null,calculations_all:null,have_data:!1,possible_data:!0,request:null,pid:current_pid,fid:current_stay_id,app_id:module_identifier};console.log("(?) getSurveyResponses",module_identifier,current_pid,current_stay_id),commit({type:"saveData",root:"sr",data:base_data});var calculation_results_api_url="/patients/"+current_pid+"/calculations/"+module_identifier;if(current_stay_id){var api_url="/stays/"+current_stay_id+"/survey_responses/"+module_identifier+"/full";data_request="stay"}else{api_url="/patients/"+current_pid+"/survey_responses/"+module_identifier+"/full";data_request="patient"}helpers.callAPI("GET",api_url,{},{},function(req){var app_id=helpers.getAppID();if(200==req.status){var resp=JSON.parse(req.response);helpers.callAPI("GET",calculation_results_api_url,{},{},function(inner_req){if(200==req.status){var calculation_results=JSON.parse(inner_req.response).calculation_results,return_array=[];if(resp.survey_responses.forEach(function(current_response,srID){var return_obj={all_found:!1,app_id:null};return_obj.date=current_response.data.filled,return_obj.response_id=current_response.id,return_obj.response=current_response.data.response,return_obj.event=null,return_obj.event_found=!1,return_obj.event_id=current_response.data.event_id,return_obj.patient=null,return_obj.patient_found=!1,return_obj.patient_id=null,return_obj.stay=null,return_obj.stay_found=!1,return_obj.stay_id=null,return_obj.patient_uses_module=null,return_obj.patient_uses_module_found=!1,return_obj.patient_uses_module_id=null,return_obj.calculation={},return_obj.calculation_found=!1,return_obj.calculation_found_method=null,resp.events.forEach(function(current_event,eventID){current_event.id===current_response.data.event_id&&(return_obj.event_found=!0,current_event.data.id=current_event.id,return_obj.event=current_event.data,return_obj.patient_uses_module_id=current_event.data.patient_uses_module_id,return_obj.patient_id=current_event.data.patient_id,return_obj.app_id=current_event.data.module,app_id=return_obj.app_id)}),return_obj.event_found&&(resp.patients.forEach(function(current_patient,patientID){if(current_patient.id===return_obj.patient_id){return_obj.patient_found=!0,current_patient.data.id=current_patient.id,current_patient.data.pid=current_patient.id;var current_patient_data=createPatientExtras(current_patient.data);return_obj.patient=current_patient_data}}),resp.patient_uses_modules.forEach(function(current_pum,pumID){current_pum.id===return_obj.patient_uses_module_id&&(return_obj.patient_uses_module_found=!0,current_pum.data.id=current_pum.id,return_obj.patient_uses_module=current_pum.data,return_obj.stay_id=current_pum.data.stay_id)})),return_obj.stay_id&&resp.stays.forEach(function(current_stay,stayID){if(current_stay.id===return_obj.stay_id){return_obj.stay_found=!0,current_stay.data.id=current_stay.id,current_stay.data.fid=current_stay.id;var current_stay_data=createStayExtras(current_stay.data);return_obj.stay=current_stay_data}}),calculation_results.forEach(function(current_calculation_top,calculationID){var calculation_name=current_calculation_top.name;current_calculation_top.result.length>0&&current_calculation_top.result.forEach(function(current_calculation,calculationID){var variant_info=!1;"info"in current_calculation&&"response"in current_calculation.info&&(variant_info=!0);var variant_response=!1;if("response"in current_calculation&&"data"in current_calculation.response&&"response"in current_calculation.response.data&&(variant_response=!0),variant_info){var calc_resp=current_calculation.info.response;JSON.stringify(calc_resp)===JSON.stringify(return_obj.response)&&(return_obj.calculation_found=!0,return_obj.calculation_found_method="variant_info",return_obj.calculation[calculation_name]=current_calculation)}if(variant_response){calc_resp=current_calculation.response.data.response;JSON.stringify(calc_resp)===JSON.stringify(return_obj.response)?(return_obj.calculation_found=!0,return_obj.calculation_found_method="variant_response",return_obj.calculation[calculation_name]=current_calculation):"TMTAError"in calc_resp&&parseInt(calc_resp.TMTAError)===parseInt(return_obj.response.TMTAError)&&parseInt(calc_resp.TMTATime)===parseInt(return_obj.response.TMTATime)&&parseInt(calc_resp.TMTBError)===parseInt(return_obj.response.TMTBError)&&parseInt(calc_resp.TMTBTime)===parseInt(return_obj.response.TMTBTime)&&parseInt(calc_resp.Ausbildungsjahre)===parseInt(return_obj.response.Ausbildungsjahre)&&parseInt(calc_resp.Messzeitpunkt)===parseInt(return_obj.response.Messzeitpunkt)&&(return_obj.calculation_found=!0,return_obj.calculation_found_method="variant_response_tmt",return_obj.calculation[calculation_name]=current_calculation)}})}),return_obj.calculation_found&&return_obj.event_found&&return_obj.patient_found&&return_obj.stay_found&&return_obj.patient_uses_module_found&&(return_obj.all_found=!0),return_array.push(return_obj)}),return_array.length>0){var have_data=!0;return_array.sort(function(a,b){var nameA=a.date.toUpperCase(),nameB=b.date.toUpperCase();return nameA<nameB?-1:nameA>nameB?1:0})}else have_data=!1;var response={date:new Date,data:return_array,calculations_all:calculation_results,have_data:have_data,possible_data:!0,request:data_request,pid:current_pid,fid:current_stay_id,app_id:app_id};console.log("(✔) Data ("+api_url+"):",response),commit({type:"saveData",root:"sr",data:response})}else{response={error:!0,error_message:"Failed with status code: "+req.status,status_code:req.status,request:data_request,app_id:app_id};console.error("(!) Error: ",response)}})}else{var response={error:!0,error_message:"Failed with status code: "+req.status,status_code:req.status,request:data_request,app_id:app_id};console.error("(!) Error: ",response)}})},getApps({commit:commit}){var api_url="module_activations",parameters={};helpers.callAPI("GET",api_url,parameters,{},function(req){if(200==req.status){var resp=JSON.parse(req.response),hotloaded=[];"patient_modules"in resp&&resp.patient_modules.length>0&&(resp.patient_modules.sort(function(a,b){var nameA=a.module.name.toUpperCase(),nameB=b.module.name.toUpperCase();return nameA<nameB?-1:nameA>nameB?1:0}),resp.patient_modules.forEach(function(m,mID){m.first_template={found:"false",name:null},m.identifier=m.module.identifier,m.module.templates.length>0&&(m.first_template.name=m.module.templates[0].name,m.first_template.found=!0),m.module_activation.data.overwritten&&hotloaded.push(m),m.identifier===helpers.getAppID()&&commit({type:"saveData",root:"current_app",data:m})})),"user_modules"in resp&&resp.user_modules.length>0&&(resp.user_modules.sort(function(a,b){var nameA=a.module.name.toUpperCase(),nameB=b.module.name.toUpperCase();return nameA<nameB?-1:nameA>nameB?1:0}),resp.user_modules.forEach(function(m,mID){m.first_template={found:"false",name:null},m.identifier=m.module.identifier,m.module.templates.length>0&&(m.first_template.name=m.module.templates[0].name,m.first_template.found=!0),m.module_activation.data.overwritten&&hotloaded.push(m),m.identifier===helpers.getAppID()&&commit({type:"saveData",root:"current_app",data:m})}));var response={data:{patient_modules:resp.patient_modules,user_modules:resp.user_modules,errors:resp.errors,hotloaded:hotloaded}};response=addOptinomicExtras(response,api_url),commit({type:"saveData",root:"apps",data:response}),console.log("(✔) Data ("+api_url+"):",response,parameters)}else{dispatch({type:"ERROR",error:handleError(req,{name:"getApps",params:[]})})}})},getUser({commit:commit}){const api_url="/users/"+helpers.getUserID();helpers.callAPI("GET",api_url,{},{},function(req){if(200==req.status){var resp=JSON.parse(req.response),data_return=resp.user.data;data_return.id=resp.user.id,data_return.uid=resp.user.id,data_return.isAdmin=!1,"Admin"===resp.user.data.role&&(data_return.isAdmin=!0);var response={id:resp.user.id,date:new Date,data:data_return};console.log("(✔) Data ("+api_url+"):",response),commit({type:"saveData",root:"user",data:response})}else{response={error:!0,api_url:api_url,error_message:"Failed with status code: "+req.status,status_code:req.status,req:req};console.error("(!) Error: ",response)}})},getPatient({commit:commit}){const api_url="/patients/"+helpers.getPatientID();helpers.callAPI("GET",api_url,{},{},function(req){if(200==req.status){var resp=JSON.parse(req.response),data_return=resp.patient.data;data_return.id=resp.patient.id,data_return.pid=resp.patient.id,data_return.extras=createPatientExtras(data_return);var response={date:new Date,data:data_return};console.log("(✔) Data ("+api_url+"):",response),commit({type:"saveData",root:"patient",data:response})}else{response={error:!0,api_url:api_url,error_message:"Failed with status code: "+req.status,status_code:req.status,req:req};console.error("(!) Error: ",response)}})},getClinic({commit:commit}){helpers.callAPI("GET","/clinic",{},{},function(req){if(200==req.status){var resp=JSON.parse(req.response),json_data={};resp.clinic.forEach(function(item,itemIndex){json_data[item[0]]=item[1]}),(response={date:new Date,data:json_data}).data.array=resp.clinic,console.log("(✔) Data (/clinic):",response),commit({type:"saveData",root:"clinic",data:response})}else{var response={error:!0,api_url:"/clinic",error_message:"Failed with status code: "+req.status,status_code:req.status,req:req};console.error("(!) Error: ",response)}})},myincrement({commit:commit}){axios.get(helpers.getApiURL()+"clinic").then(response=>{console.log("RESP",response),commit("saveClinic",response),commit("increment")}).catch(error=>console.log("Error: clinic: ",error))}}}),methods:{}});